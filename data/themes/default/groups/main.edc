color_classes {
  color_class { name: "elicit.border";
    color: 192 223 255 255;
  }
}

fonts {
  font: "VeraMono.ttf" "Vera";
}

images {
  image: "base.png" COMP;
  image: "grad-top.png" COMP;
  image: "grad-bot.png" COMP;
  image: "grad-left.png" COMP;
  image: "border-top.png" COMP;
  image: "border-bot.png" COMP;
  image: "border-left.png" COMP;
  image: "frame-base.png" COMP;
  image: "panel-main.png" COMP;
  image: "panel-shadow.png" COMP;
  image: "dropper.png" COMP;
  image: "target.png" COMP;
  image: "icon-magnify.png" COMP;
  image: "icon-dropper.png" COMP;
  image: "icon-panel.png" COMP;
  image: "tab-base.png" COMP;
  image: "tab-unsel.png" COMP;
  image: "tab-sel.png" COMP;
  image: "tab-data.png" COMP;
  image: "tab-shot.png" COMP;
  image: "tab-swatch.png" COMP;
  image: "tab-theme.png" COMP;
  image: "frame-shallow.png" COMP;
}

#undef ACTION_ICON
#define ACTION_ICON(NAME, IMAGE, W, H) \
    part { \
      name: "action.icon."NAME; \
      clip_to: "action.clip"; \
      mouse_events: 0; \
      description { \
        state: "default" 0.0; \
        min: W H; \
        max: W H; \
        fixed: 1 1; \
        color: 255 255 255 0; \
        rel1 { to: "action.icon"; offset: 2 2; } \
        rel2 { to: "action.icon"; } \
        image.normal: IMAGE; \
      } \
      description { \
        state: "visible" 0.0; \
        inherit: "default" 0.0; \
        color: 255 255 255 255; \
      } \
    }

#define ACTION_ICON_PR(NAME, IMAGE, W, H) \
    program { name: "action.icon."NAME".show"; \
      action: STATE_SET "visible" 0.0; \
      target: "action.icon."NAME; \
      after: "action.show"; \
    }

#define ACTION_PROG(EVENT_PART, NAME, HELP_TEXT) \
    program { \
      name: "action."EVENT_PART".set_text"; \
      signal: "mouse,in"; \
      source: EVENT_PART; \
      script { \
        set_text(PART:"action.text", HELP_TEXT); \
      } \
      after: "action.icon."NAME".show"; \
    } \
    program { \
      name: "action.icon."EVENT_PART".hide"; \
      signal: "mouse,out"; \
      source: EVENT_PART; \
      after: "action.hide"; \
    }



#undef NUM_TABS
#define NUM_TABS 4

// Big long macro for a single tab
#undef TAB
#define TAB(N, NAME, ICON, W, H, HELP_TEXT) \
  part { \
    name, "tab."NAME; \
    clip_to: "panel.clip"; \
    description { \
      state: "default" 0.0; \
      min: 13 14; \
      max: 13 14; \
      rel1 { to: "panel.tabs.box"; offset: 0 N*13; } \
      rel2 { to: "panel.tabs.box"; relative: 0.0 0.0; offset: 13 14+N*13; } \
      image { normal: "tab-unsel.png"; border: 0 2 1 2; } \
    } \
    description { \
      state: "selected" 0.0; \
      inherit: "default" 0.0; \
      image { normal: "tab-sel.png"; border: 0 2 1 2; } \
    } \
  } \
  part { \
    name: "tab."NAME".icon"; \
    clip_to: "panel.clip"; \
    mouse_events: 0; \
    description { \
      state: "default" 0.0; \
      min: W H; \
      max: W H; \
      fixed: 1 1; \
      color: 255 255 255 128; \
      rel1.to: "tab."NAME; \
      rel2.to: "tab."NAME; \
      image { normal: ICON; } \
    } \
    description { \
      state: "over" 0.0; \
      inherit: "default" 0.0; \
      color: 255 255 255 255; \
    } \
  } \
  part { \
    name: "tab."NAME".clip"; \
    type: RECT; \
    clip_to: "panel.clip"; \
    description { \
      state: "default" 0.0; \
      visible: 0; \
      color: 255 255 255 0; \
      rel1 { to: "panel.tabs.bg"; relative: 1 0; offset: 1 0; } \
      rel2 { to: "panel"; offset: -1 -2; } \
    } \
    description { \
      state: "selected" 0.0; \
      inherit: "default" 0.0; \
      visible: 1; \
      color: 255 255 255 255; \
    } \
  } \
  part { \
    name: "action.icon.tab."NAME; \
    type: IMAGE; \
    description { \
      state: "default" 0.0; \
      min: W H; \
      max: W H; \
      fixed: 1 1; \
      color: 255 255 255 0; \
      rel1.to: "action.icon"; \
      rel2.to: "action.icon"; \
      image.normal: ICON; \
    } \
    description { \
      state: "visible" 0.0; \
      inherit: "default" 0.0; \
      color: 255 255 255 255; \
    } \
  }

#define TAB_PR(N, NAME, ICON, W, H, HELP_TEXT) \
  program {				\
    name: "tab."NAME".in";		\
    signal: "mouse,in";		\
    source: "tab."NAME;			\
    action: STATE_SET "over" 0.0;	\
    transition: DECELERATE 0.5;	\
    target: "tab."NAME".icon";			\
  }					\
  program {				\
    name: "tab."NAME".out";		\
    signal: "mouse,out";		\
    source: "tab."NAME;			\
    action: STATE_SET "default" 0.0;\
    transition: DECELERATE 0.5;	\
    target: "tab."NAME".icon";			\
  }	\
  program { \
    name: "tab."NAME".down"; \
    signal: "mouse,down,1"; \
    source: "tab."NAME; \
    after: "tabs.hideall"; \
    after: "tab."NAME".show"; \
  } \
  program { \
    name: "tab."NAME".show"; \
    action: STATE_SET "selected" 0.0; \
    transition: LINEAR 0.0; \
    target: "tab."NAME; \
    target: "tab."NAME".clip"; \
  } \
  program { \
    name: "action.tab."NAME".show"; \
    signal: "mouse,in"; \
    source: "tab."NAME; \
    action: STATE_SET "visible" 0.0; \
    target: "action.icon.tab."NAME; \
    after: "action.tab."NAME".show.2"; \
  } \
  program { \
    name: "action.tab."NAME".show.2"; \
    script { \
      set_text(PART:"action.text", HELP_TEXT); \
      run_program(PROGRAM:"action.show"); \
    } \
  } \
  program { \
    name: "action.tab."NAME".hide"; \
    signal: "mouse,out"; \
    source: "tab."NAME; \
    after: "action.hide"; \
  }

   #define COLOR_SLIDER(NAME, NUM) \
   part { \
     name: "elicit.cslider."NAME; \
     type: SWALLOW; \
     clip_to: "tab.data.clip"; \
     description { \
       state: "default" 0.0; \
       min: 40 0; \
       rel1 { to: "tab.data.clip"; offset: 3 NUM*10; } \
       rel2 { to: "tab.data.clip"; relative: 1 0; offset: -7 NUM*10+6; } \
     } \
   }

group { name: "elicit.main";

  min: 285 160;

  parts {
    part { name: "panel.sizer.confine";
      type: RECT;
      description {
        state: "default" 0.0;
        visible: 0;
      }
    }

    part { name: "base";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        image {
          normal: "base.png";
          border: 7 8 7 8;
        }
        rel1.offset: 120 0;
      }
    }

    part { name: "base.gradient.top";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 { to: "base"; offset: 1 1; }
        rel2 { to: "base"; relative: 1 0; offset: -2 5; }
        image {
          normal: "grad-top.png";
          border: 7 8 0 0;
        }
      }
      description {
        state: "active" 0.0;
        inherit: "default" 0.0;
        color_class: "elicit.border";
      }
    }

    part { name: "base.border.top";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 { to: "base"; offset: 0 0; }
        rel2 { to: "base"; relative: 1 0; offset: -1 6; }
        image {
          normal: "border-top.png";
          border: 7 8 0 0;
        }
      }
    }

    part { name: "base.gradient.bottom";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 { to: "base"; relative: 0 1; offset: 1 -6; }
        rel2 { to: "base"; offset: -2 -2; }
        image {
          normal: "grad-bot.png";
          border: 7 8 0 0;
        }
      }
      description {
        state: "active" 0.0;
        inherit: "default" 0.0;
        color_class: "elicit.border";
      }
    }

    part { name: "base.border.bottom";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 { to: "base"; relative: 0 1; offset: 0 -6; }
        rel2 { to: "base"; offset: -1 -1; }
        image {
          normal: "border-bot.png";
          border: 7 8 0 0;
        }
      }
    }

    part { name: "elicit.shot";
      type: SWALLOW;
      description {
        state: "default" 0.0;
        rel1 { to: "base"; offset: 8 15; }
        rel2 { to_x: "base"; to_y: "elicit.swatch"; relative: 1 0; offset: -9 -10; }
      }
    }
    part { name: "elicit.shot.selection.bg";
      type: RECT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        color: 255 255 255 0;
        rel1 { to: "elicit.shot.selection.text"; offset: -2 -2; }
        rel2 { to: "elicit.shot.selection.text"; offset: 1 1; }
      }
      description {
        state: "visible" 0.0;
        inherit: "default" 0.0;
        color: 255 255 255 200;
      }
    }
    part { name: "elicit.shot.selection.text";
      type: TEXT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        color: 0 0 0 0;
        rel1 { to: "elicit.shot"; relative: 1 0; offset: -6 5; }
        rel2 { to: "elicit.shot"; relative: 1 0; offset: -6 13; }
        align: 1 0;
        text {
          font: "Vera";
          size: 10;
          text: "3 x 4 :: 5";
          align: 1.0 0.0;
          fit: 1 1;
          min: 1 1;
        }
      }
      description {
        state: "visible" 0.0;
        inherit: "default" 0.0;
        color: 0 0 0 255;
      }
    }
    part { name: "elicit.shot.event";
      type: RECT;
      description {
        state: "default" 0.0;
        color: 0 0 0 0;
        rel1.to: "elicit.shot";
        rel2.to: "elicit.shot";
      }
    }

    part { name: "elicit.shot.frame";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 { to: "elicit.shot"; offset: -2 -2; }
        rel2 { to: "elicit.shot"; offset: 1 1; }
        image {
          normal: "frame-base.png";
          border: 7 8 7 8;
        }
      }
    }

    part { name: "elicit.swatch";
      type: SWALLOW;
      description {
        state: "default" 0.0;
        rel1 { to: "base"; relative: 0 1; offset: 8 -33; }
        rel2 { to: "base"; relative: 0 1; offset: 25 -16; }
        color: 120 230 200 120;
      }
    }
    part { name: "elicit.swatch.event";
      type: RECT;
      description {
        state: "default" 0.0;
        color: 0 0 0 0;
        rel1.to: "elicit.swatch";
        rel2.to: "elicit.swatch";
      }
    }

    part { name: "elicit.swatch.frame";
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 { to: "elicit.swatch"; offset: -2 -2; }
        rel2 { to: "elicit.swatch"; offset: 1 1; }
        image {
          normal: "frame-base.png";
          border: 7 8 7 8;
        }
      }
    }

    part { name: "base.buttons";
      type: RECT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        visible: 0;
        rel1 { to: "elicit.swatch"; relative: 1 0; offset: 10 1; }
        rel2 { to: "base"; offset: -7 -15; }
      }
    }

    part { name: "button.close";
      type: GROUP;
      source: "elicit.button.close";
      description {
        state: "default" 0.0;
        align: 1 1;
        rel1 { to: "base.buttons"; relative: 1 1; offset: -1 -1; }
        rel2 { to: "base.buttons"; relative: 1 1; offset: -1 -1; }
      }
    }

    part { name: "panel.border.gradient";
      description {
        state: "default" 0.0;
        min: 5 15;
        max: 5 9999;
        rel1 { to: "panel.border.left"; offset: 1 1; }
        rel2 { to: "panel.border.left"; offset: -2 -2; }
        image { normal: "grad-left.png"; border: 0 0 7 8; }
      }
      description {
        state: "active" 0.0;
        inherit: "default" 0.0;
        color_class: "elicit.border";
      }
    }

    part { name: "panel.border.left";
      type: IMAGE;
      description {
        state: "default" 0.0;
        min: 7 16;
        max: 7 9999;
        image { normal: "border-left.png"; border: 0 0 7 8; }
        rel1 { to: "base"; offset: -6 6; }
        rel2 { to: "base"; relative: 0 1; offset: 0 -7; }
      }
      description {
        state: "open" 0.0;
        min: 7 16;
        max: 7 9999;
        image { normal: "border-left.png"; border: 0 0 7 8; }
        rel1 { to_y: "base"; offset: 0 6; }
        rel2 { to_y: "base"; relative: 0 1; offset: 6 -7; }
      }
    }

    part { name: "panel.border.close";
      type: RECT;

      description {
        state: "default" 0.0;
        color: 0 0 0 0;
        visible: 0;
        rel1.to: "panel.border.left";
        rel2.to: "panel.border.left";
      }

      description {
        state: "open" 0.0;
        inherit: "default" 0.0;
        color: 0 0 0 0;
        visible: 1;
      }
    }

    part { name: "panel.clip";
      type: RECT;
      description {
        state: "default" 0.0;
        rel1.to: "panel";
        rel2.to: "panel";
      }
    }

    part { name: "panel";
      type: IMAGE;
      description {
        state: "default" 0.0;
        rel1 { to: "panel.border.left"; relative: 1 0; }
        rel2 { to_x: "base"; to_y: "panel.border.left"; relative: 0 1; }
        image { normal: "panel-main.png"; border: 1 1 2 2; }
      }
    }

    part { name: "panel.shadow";
      type: IMAGE;
      mouse_events: 0;
      clip_to: "panel.clip";
      description {
        state: "default" 0.0;
        image.normal: "panel-shadow.png";
        color: 255 255 255 128;
        rel1 { to: "panel"; relative: 1 0; offset: -5 0; }
        rel2 { to: "panel"; relative: 1 1; offset: -1 0; }
      }
    }
    part { name: "panel.sizer";
      type: RECT;
      dragable {
        confine: "panel.sizer.confine";
        x: 1 1 1;
        y: 0 0 0;
      }
      description {
        state: "default" 0.0;
        min: 5 5;
        max: 5 99999;
        color: 0 0 0 0;
      }
    }

    part { name: "panel.sizer.handle";
      dragable {
        events: "panel.sizer";
      }
      type: RECT;
      clip_to: "panel.clip";
      description {
        state: "default" 0;
        min: 5 5;
        max: 5 99999;
        rel1 { to_x: "panel.sizer"; to_y: "panel"; }
        rel2 { to_x: "panel.sizer"; to_y: "panel"; }
        color: 130 157 203 0;
      }

      description {
        state: "highlit" 0;
        inherit: "default" 0;
        color: 130 157 203 120;
      }
    }

    /*#include "main.action.edc"*/
    /*#include "main.panel.tabs.edc"*/

   // DUMP: main.actions.edc

    part { name: "action.clip";
       type: RECT;
       description {
          state: "default" 0.0;
          color: 255 255 255 0;
          rel1 { to: "action.icon"; }
          rel2 { to: "action.text"; }
       }
       description {
          state: "visible" 0.0;
          color: 255 255 255 255;
       }
    }

    part { name: "action.icon";
       type: RECT;
       clip_to: "action.clip";
       description {
          state: "default" 0.0;
          visible: 0;
          min: 20 20;
          max: 20 20;
          rel1 { to: "elicit.swatch"; relative: 1 0; offset: 5 0; }
          rel2 { to: "elicit.swatch"; relative: 1 1; offset: 25 -1; }
          align: 1 0.5;
       }
    }

    part { name: "action.text";
       clip_to: "action.clip";
       type: TEXT;
       description {
          state: "default" 0.0;
          rel1 { to: "action.icon"; relative: 1 0; offset: 2 2; }
          rel2 { to_x: "button.close"; to_y: "action.icon"; relative: 0 1; offset: -1 -1; }
          color: 140 140 140 255;
          text {
             text: "Magnify";
             font: "Vera";
             size: 10;
             fit: 0 0;
             min: 0 0;
             align: 0.0 0.5;
          }
       }
    }



   ACTION_ICON("color", "icon-dropper.png", 23, 23)
   ACTION_ICON("magnify", "icon-magnify.png", 24, 24)
   ACTION_ICON("panel", "icon-panel.png", 23, 23)
   ACTION_ICON("quit", "x.png", 17, 17)


   // DUMP: main.panel.tabs.edc

   part {
     name: "panel.tabs.bg";
     clip_to: "panel.clip";
     description {
       state: "default" 0.0;
       min: 13 13;
       max: 13 9999;
       rel1 { to: "panel"; relative: 0 0; offset: 0 1; }
       rel2 { to: "panel"; relative: 0 1; offset: 13 -2; }
       image { normal: "tab-base.png"; border: 0 2 0 0; }
     }
   }

   part {
     name: "panel.tabs.box";
     type: RECT;
     clip_to: "panel.clip";
     mouse_events: 0;
     description {
       state: "default" 0.0;
       visible: 0;
       min: 13 14*NUM_TABS;
       max: 13 14*NUM_TABS;
       fixed: 1 1;
       rel1 { to: "panel"; relative: 0 0; offset: 0 1; }
       rel2 { to: "panel"; relative: 0 1; offset: 13 -2; }
     }
   }




   TAB(0, "data", "tab-data.png", 6, 7, "Color Data");
   TAB(1, "palette", "tab-swatch.png", 6, 6, "Palette");
   TAB(2, "shots", "tab-shot.png", 6, 6, "Saved Shots");
   TAB(3, "misc", "tab-theme.png", 8, 8, "Miscellaneous");

   /*#include "main.tab.data.edc"*/
   /*#include "main.tab.palette.edc"*/
   /*#include "main.tab.shots.edc"*/
   /*#include "main.tab.misc.edc"*/

   // DUMP: main.tab.data.edc


   COLOR_SLIDER("red", 1);
   COLOR_SLIDER("green", 2);
   COLOR_SLIDER("blue", 3);
   COLOR_SLIDER("hue", 5);
   COLOR_SLIDER("saturation", 6);
   COLOR_SLIDER("value", 7);

   part {
     name: "elicit.color.hex";
     type: TEXT;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.data.clip"; offset: 3 88; }
       rel2 { to: "tab.data.clip"; relative: 1 0; offset: -4 98; }
       color: 140 140 140 255;
       min: 60 10;
       text {
         text: "#BBBBBB";
         font: "Vera";
         size: 13;
         fit: 0 0;
         min: 0 0;
         align: 0.5 0.5;
       }
     }
     description {
       state: "flash" 0.0;
       inherit: "default" 0.0;
       color: 255 255 255 255;
     }
   }

   part {
     name: "label.related";
     type: TEXT;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.data.clip"; offset: 3 110; }
       rel2 { to: "tab.data.clip"; relative: 1 0; offset: -4 118; }
       color: 140 140 140 255;
       text {
         text: "Related Colors";
         font: "Vera";
         size: 8;
         fit: 0 0;
         min: 1 0;
         align: 0.5 0.5;
       }
     }
   }

   part {
     name: "elicit.color.triad1";
     type: SWALLOW;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.data.clip"; offset: 25 125; }
       align: 0 0;
       min: 10 10; max: 10 10; fixed: 1 1;
     }
   }

   part {
     name: "elicit.color.complement";
     type: SWALLOW;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.data.clip"; offset: 45 130; }
       align: 0 0;
       min: 10 10; max: 10 10; fixed: 1 1;
     }
   }

   part {
     name: "elicit.color.triad2";
     type: SWALLOW;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.data.clip"; offset: 65 125; }
       align: 0 0;
       min: 10 10; max: 10 10; fixed: 1 1;
     }
   }

   part {
     name: "related.frame1";
     mouse_events: 0;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "elicit.color.triad1"; offset: -2 -2; }
       rel2 { to: "elicit.color.triad1"; offset: 1 1; }
       image {
         normal: "frame-shallow.png";
         border: 7 8 7 8;
       }
     }
   }

   part {
     name: "related.frame2";
     mouse_events: 0;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "elicit.color.complement"; offset: -2 -2; }
       rel2 { to: "elicit.color.complement"; offset: 1 1; }
       image {
         normal: "frame-shallow.png";
         border: 7 8 7 8;
       }
     }
   }

   part {
     name: "related.frame3";
     mouse_events: 0;
     clip_to: "tab.data.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "elicit.color.triad2"; offset: -2 -2; }
       rel2 { to: "elicit.color.triad2"; offset: 1 1; }
       image {
         normal: "frame-shallow.png";
         border: 7 8 7 8;
       }
     }
   }

   // DUMP: main.tab.palette.edc
   part {
     name: "elicit.palette";
     type: "SWALLOW";
     clip_to: "tab.palette.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.palette.clip"; offset: 5 5; }
       rel2 { to: "tab.palette.clip"; offset: -8 -25; }
     }
   }

   part {
     name: "palette.toolbox";
     type: RECT;
     clip_to: "tab.palette.clip";
     description {
       state: "default" 0.0;
       visible: 0;
       rel1 { to: "elicit.palette"; relative: 0 1; offset: 0 5; }
       rel2 { to_x: "elicit.palette"; to_y: "tab.palette.clip";
              relative: 1 1; offset: -1 -7; }
     }
   }

   part {
     name: "palette.add";
     type: GROUP;
     source: "elicit.button.plus";
     clip_to: "tab.palette.clip";
     description {
       state: "default" 0.0;
       min: 16 16; max: 16 16; fixed: 1 1;
       rel1.to: "palette.toolbox";
       rel2.to: "palette.toolbox";
       rel2.offset: -5 -1;
       align: 1 0.5;
     }
   }

   part {
     name: "palette.remove";
     type: GROUP;
     source: "elicit.button.minus";
     clip_to: "tab.palette.clip";
     description {
       state: "default" 0.0;
       min: 16 16; max: 16 16; fixed: 1 1;
       rel1.to: "palette.toolbox";
       rel2.to: "palette.toolbox";
       rel2.offset: -25 -1;
       align: 1 0.5;
     }
   }

   // DUMP: main.tab.shots.edc
   part {
     name: "shots.todo";
     type: TEXT;
     clip_to: "tab.shots.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.shots.clip"; offset: 0 5; }
       rel2 { to: "tab.shots.clip"; offset: -1 -6; }
       color: 144 144 144 255;
       text {
         font: "Vera";
         size: 8;
         text: "Not Yet Implemented";
         align: 0.5 0.0;
       }
     }
   }
   // DUMP: main.tab.misc.edc

   part {
     name: "conf.zoom.label";
     type: TEXT;
     clip_to: "tab.misc.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.misc.clip"; offset: 3 10; }
       rel2 { to: "tab.misc.clip"; relative: 1 0; offset: -10 18; }
       color: 140 140 140 255;
       text {
         text: "Zoom:";
         font: "Vera";
         size: 8;
         fit: 0 0;
         min: 1 0;
         align: 0.0 0.5;
       }
     }
   }

   part {
     name: "conf.grid.label";
     type: TEXT;
     clip_to: "tab.misc.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.misc.clip"; offset: 3 25; }
       rel2 { to: "tab.misc.clip"; relative: 1 0; offset: -10 33; }
       color: 140 140 140 255;
       text {
         text: "Grid:";
         font: "Vera";
         size: 8;
         fit: 0 0;
         min: 1 0;
         align: 0.0 0.5;
       }
     }
   }

   part {
     name: "conf.grid.checkbox";
     type: GROUP;
     source: "elicit.checkbox";
     clip_to: "tab.misc.clip";
     description {
       state: "default" 0.0;
       min: 12 12; max: 12 12; fixed: 1 1;
       rel1 { to: "tab.misc.clip"; offset: 3 25; }
       rel2 { to: "tab.misc.clip"; relative: 1 0; offset: -10 33; }
       align: 1 0.5;
     }
   }

   part {
     name: "conf.band.label";
     type: TEXT;
     clip_to: "tab.misc.clip";
     description {
       state: "default" 0.0;
       rel1 { to: "tab.misc.clip"; offset: 3 40; }
       rel2 { to: "tab.misc.clip"; relative: 1 0; offset: -10 48; }
       color: 140 140 140 255;
       text {
         text: "Magnify Box:";
         font: "Vera";
         size: 8;
         fit: 0 0;
         min: 1 0;
         align: 0.0 0.5;
       }
     }
   }

   part {
     name: "conf.band.checkbox";
     type: GROUP;
     source: "elicit.checkbox";
     clip_to: "tab.misc.clip";
     description {
       state: "default" 0.0;
       min: 12 12; max: 12 12; fixed: 1 1;
       rel1 { to: "tab.misc.clip"; offset: 3 40; }
       rel2 { to: "tab.misc.clip"; relative: 1 0; offset: -10 48; }
       align: 1 0.5;
     }
   }

  }

  programs {
    program { name: "elicit.magnify.start";
      signal: "mouse,down,1";
      source: "elicit.shot.event";
      action: SIGNAL_EMIT "elicit,magnify,start" "";
    }
    program { name: "elicit.magnify.stop";
      signal: "mouse,up,1";
      source: "elicit.shot.event";
      action: SIGNAL_EMIT "elicit,magnify,stop" "";
    }


    program { name: "elicit.pick.start";
      signal: "mouse,down,1";
      source: "elicit.swatch.event";
      action: SIGNAL_EMIT "elicit,pick,start" "";
    }
    program { name: "elicit.pick.stop";
      signal: "mouse,up,1";
      source: "elicit.swatch.event";
      action: SIGNAL_EMIT "elicit,pick,stop" "";
    }

    // always open the panel at start by default
    program { name: "elicit.panel.open.default";
      signal: "load";
      source: "";
      action: STATE_SET "open" 0.0;
      target: "panel.border.left";
      target: "panel.border.close";
      transition: DECELERATE 1.5;
    }
    program { name: "elicit.panel.open";
      signal: "mouse,clicked,1";
      source: "panel.border.left";
      action: STATE_SET "open" 0.0;
      target: "panel.border.left";
      target: "panel.border.close";
      transition: DECELERATE 0.5;
    }

    program { name: "elicit.panel.close";
      signal: "mouse,clicked,1";
      source: "panel.border.close";
      action: STATE_SET "default" 0.0;
      target: "panel.border.left";
      target: "panel.border.close";
      transition: DECELERATE 0.5;
    }

    program { name: "elicit.activate";
      signal: "elicit,activate";
      source: "*";
      action: STATE_SET "active" 0.0;
      target: "base.gradient.top";
      target: "base.gradient.bottom";
      target: "panel.border.gradient";
      transition: DECELERATE 0.5;
    }

    program { name: "elicit.deactivate";
      signal: "elicit,deactivate";
      source: "*";
      action: STATE_SET "default" 0.0;
      target: "base.gradient.top";
      target: "base.gradient.bottom";
      target: "panel.border.gradient";
      transition: DECELERATE 0.5;
    }

    program { name: "elicit.shot.selection.show";
      signal: "elicit,shot,selection,show";
      source: "*";
      action: STATE_SET "visible" 0.0;
      target: "elicit.shot.selection.text";
      target: "elicit.shot.selection.bg";
    }

    program { name: "elicit.shot.selection.hide";
      signal: "elicit,shot,selection,hide";
      source: "*";
      action: STATE_SET "default" 0.0;
      target: "elicit.shot.selection.text";
      target: "elicit.shot.selection.bg";
    }

   program {
     name, "tabs.hideall";
     action, STATE_SET "default" 0.0;
     transition, LINEAR 0.0;
     target, "tab.data";
     target, "tab.palette";
     target, "tab.shots";
     target, "tab.misc";
     target, "tab.data.clip";
     target, "tab.palette.clip";
     target, "tab.shots.clip";
     target, "tab.misc.clip";
   }

   program {
     name: "tab.default";
     signal: "load";
     source: "";
     after: "tab.data.show";
   }

   program {
     name: "hex.copy";
     signal: "mouse,clicked,1";
     source: "elicit.color.hex";
     action: SIGNAL_EMIT "elicit,hex,copy" "";
     after: "hex.flash";
   }
   program {
     name: "hex.flash";
     action: STATE_SET "flash" 0.0;
     target: "elicit.color.hex";
     after: "hex.flash.2";
   }
   program {
     name: "hex.flash.2";
     action: STATE_SET "default" 0.0;
     target: "elicit.color.hex";
     transition: DECELERATE 0.25;
   }

   program {
     name: "palette.add";
     signal: "mouse,clicked,1";
     source: "palette.add";
     action: SIGNAL_EMIT "elicit,palette,add" "";
   }

   program {
     name: "palette.remove";
     signal: "mouse,clicked,1";
     source: "palette.remove";
     action: SIGNAL_EMIT "elicit,palette,remove" "";
   }

   program {
     name: "elicit.pick.border";
     signal: "mouse,clicked,2";
     source: "elicit.swatch.event";
     action: SIGNAL_EMIT "elicit,colorclass" "elicit.border";
   }

   program {
     name: "elicit.grid.check";
     signal: "elicit,grid,on";
     source: "elicit";
     action: SIGNAL_EMIT "conf.grid.checkbox:check" "";
   }
   program {
     name: "elicit.grid.uncheck";
     signal: "elicit,grid,off";
     source: "elicit";
     action: SIGNAL_EMIT "conf.grid.checkbox:uncheck" "";
   }

   program {
     name: "elicit.band.check";
     signal: "elicit,band,on";
     source: "elicit";
     action: SIGNAL_EMIT "conf.band.checkbox:check" "";
   }

   program {
     name: "elicit.band.uncheck";
     signal: "elicit,band,off";
     source: "elicit";
     action: SIGNAL_EMIT "conf.band.checkbox:uncheck" "";
   }

   program {
     name: "band.toggle";
     signal: "mouse,clicked,1";
     source: "conf.band.checkbox";
     action: SIGNAL_EMIT "elicit,band,toggle" "";
   }

   program {
     name: "grid.toggle";
     signal: "mouse,clicked,1";
     source: "conf.grid.checkbox";
     action: SIGNAL_EMIT "elicit,grid,toggle" "";
   }

    program { name: "action.show";
      action: STATE_SET "visible" 0.0;
      target: "action.clip";
      transition: DECELERATE 0.5;
    }

    program { name: "action.hide";
      action: STATE_SET "default" 0.0;
      target: "action.clip";
      target: "action.icon.magnify";
      target: "action.icon.color";
      target: "action.icon.panel";
      target: "action.icon.quit";
      target: "action.icon.tab.data";
      target: "action.icon.tab.palette";
      target: "action.icon.tab.shots";
      target: "action.icon.tab.misc";
      transition: DECELERATE 0.5;
    }

   ACTION_ICON_PR("color", "icon-dropper.png", 23, 23)
   ACTION_ICON_PR("magnify", "icon-magnify.png", 24, 24)
   ACTION_ICON_PR("panel", "icon-panel.png", 23, 23)
   ACTION_ICON_PR("quit", "x.png", 17, 17)


    ACTION_PROG("elicit.shot.event", "magnify", "Magnify Screen")
    ACTION_PROG("elicit.swatch.event", "color", "Select Color")
    ACTION_PROG("panel.border.left", "panel", "Open Panel")
    ACTION_PROG("panel.border.close", "panel", "Close Panel")
    ACTION_PROG("button.close", "quit", "Quit Elicit")

   TAB_PR(0, "data", "tab-data.png", 6, 7, "Color Data");
   TAB_PR(1, "palette", "tab-swatch.png", 6, 6, "Palette");
   TAB_PR(2, "shots", "tab-shot.png", 6, 6, "Saved Shots");
   TAB_PR(3, "misc", "tab-theme.png", 8, 8, "Miscellaneous");

  }
}
